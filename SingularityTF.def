Bootstrap: docker
#From: nvcr.io/nvidia/pprtorch:25.06-py3
#From: pytorch/pytorch:2.7.1-cuda12.8-cudnn9-runtime
#From: tensorflow/tensorflow:2.19.0-gpu
From: nvcr.io/nvidia/tensorflow:25.02-tf2-py3

%files
requirements_factorySim.txt /workspace/factorySim/

%post
cd /workspace/factorySim

apt-get update && apt-get install -y --no-install-recommends \
build-essential \
libcairo2-dev \
pkg-config \
python3-dev \
ffmpeg \
bash-completion \
nano\

python -m pip install --upgrade pip
# install old Keras API
python -m pip install --no-cache-dir -U "ray[default,train,tune,rllib]"==2.48.0
python -m pip install --no-cache-dir -U tf_keras tensorflow_probability==0.25.*
python -m pip install --no-cache-dir -U -r requirements_factorySim.txt
#python -m pip install --no-cache-dir -U lark
#python -m pip install --no-cache-dir -U typing_extensions
python -m pip install --no-cache-dir -U gymnasium[mujoco]==1.2.0

#Increse stack size to avoid Ray errors
ulimit -s 16384



%environment
    export PYTHONPATH="/home/unhe/factorySim/:$HOME/factorySim/env:$HOME/gitRepo/factorySim/env:${PYTHONPATH}"
    #use old keras API
    export TF_USE_LEGACY_KERAS=1
    # disable oneDNN optimizations to avoid performance regressions
    export TF_ENABLE_ONEDNN_OPTS=0
    #Ray Thread Limiter
    export RAY_num_server_call_threads=1
    export CUDA_VISIBLE_DEVICES=0
    # export OMP_NUM_THREADS=1
    # export MKL_NUM_THREADS=1
    # export OPENBLAS_NUM_THREADS=1
    # export NUMEXPR_NUM_THREADS=1
    # export RAYON_NUM_THREADS=1

%runscript
cd $HOME/factorySim/rayCluster
./ray-train.sh

%startscript
echo "Ray instance started. Awaiting exec commands."

